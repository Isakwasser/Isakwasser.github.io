{"version":3,"sources":["components/info.js","components/form.js","components/weather.js","App.js","reportWebVitals.js","index.js"],"names":["Info","Form","props","onSubmit","weatherMethod","type","name","placeholder","Weather","className","city","country","temp","pressure","sunset","error","API_KEY","App","state","undefined","getWeather","event","a","preventDefault","target","elements","value","fetch","api_url","json","data","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPASeA,EAPF,kBACT,gCACI,+IACA,gMCIOC,EAPF,SAAAC,GAAK,OACd,uBAAMC,SAAUD,EAAME,cAAtB,UACI,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,mCAC3C,+HCWOC,EAdC,SAAAN,GAAK,OACjB,sBAAKO,UAAU,YAAf,UACKP,EAAMQ,MAAQ,gCACX,uHAAoBR,EAAMQ,KAA1B,KAAkCR,EAAMS,WACxC,qGAAiBT,EAAMU,QACvB,mFAAcV,EAAMW,YACpB,sGAAkBX,EAAMY,aAG5B,mBAAGL,UAAU,QAAb,SAAsBP,EAAMa,YCN9BC,EAAU,mCA0EDC,E,4MAtEbC,MAAQ,CACNN,UAAMO,EACNT,UAAMS,EACNR,aAASQ,EACTN,cAAUM,EACVL,YAAQK,EACRJ,WAAOI,G,EAETC,W,uCAAa,WAAOC,GAAP,yBAAAC,EAAA,yDACXD,EAAME,mBACAb,EAAOW,EAAMG,OAAOC,SAASf,KAAKgB,OAF7B,iCAOPC,MAAM,qDAAD,OAAsDjB,EAAtD,kBAAoEM,EAApE,kBAPE,cAMHY,EANG,gBAQUA,EAAQC,OARlB,OAQHC,EARG,OAULhB,EAASgB,EAAKC,IAAIjB,QAClBkB,EAAO,IAAIC,MACVC,QAAQpB,GACTqB,EAAcH,EAAKI,WAAa,IAAMJ,EAAKK,aAAe,IAAML,EAAKM,aACzE,EAAKC,SAAS,CACZ3B,KAAMkB,EAAKU,KAAK5B,KAChBF,KAAMoB,EAAKxB,KACXK,QAASmB,EAAKC,IAAIpB,QAClBE,SAAUiB,EAAKU,KAAK3B,SACpBC,OAAQqB,EACRpB,WAAOI,IApBA,wBAuBT,EAAKoB,SAAS,CACZ3B,UAAMO,EACNT,UAAMS,EACNR,aAASQ,EACTN,cAAUM,EACVL,YAAQK,EACRJ,MAAO,qIA7BA,4C,kGAkCb,WACE,OACE,qBAAKN,UAAU,UAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAML,cAAeqC,KAAKrB,aAC1B,cAAC,EAAD,CACER,KAAM6B,KAAKvB,MAAMN,KACjBF,KAAM+B,KAAKvB,MAAMR,KACjBC,QAAS8B,KAAKvB,MAAMP,QACpBE,SAAU4B,KAAKvB,MAAML,SACrBC,OAAQ2B,KAAKvB,MAAMJ,OACnBC,MAAO0B,KAAKvB,MAAMH,wB,GA7DlB2B,IAAMC,WCKTC,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.9d4e6942.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Info = () => (\r\n    <div>\r\n        <h2>Погодное приложение</h2>\r\n        <p>Узнайте погоду в вашем городе!</p>\r\n    </div>\r\n);\r\n\r\nexport default Info;","import React from \"react\";\r\n\r\nconst Form = props => (\r\n    <form onSubmit={props.weatherMethod}>\r\n        <input type=\"text\" name=\"city\" placeholder=\"Город\" />\r\n        <button>Получить погоду</button>\r\n    </form>\r\n);\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Weather = props => (\r\n    <div className=\"infoWeath\">\r\n        {props.city && <div>\r\n            <p>Местоположение: {props.city}, {props.country}</p>\r\n            <p>Температура: {props.temp}</p>\r\n            <p>Давление: {props.pressure}</p>\r\n            <p>Заход солнца: {props.sunset}</p>\r\n        </div>\r\n        }\r\n        <p className=\"error\">{props.error}</p>\r\n    </div>\r\n);\r\n\r\n\r\nexport default Weather;","import React from 'react';\nimport Info from './components/info';\nimport Form from './components/form';\nimport Weather from './components/weather';\n\nconst API_KEY = 'fefdbfb5a1c67a4e7c664447c496b3a7';\n\nclass App extends React.Component {\n\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    pressure: undefined,\n    sunset: undefined,\n    error: undefined    \n  }\n  getWeather = async (event) => {\n    event.preventDefault();\n    const city = event.target.elements.city.value;\n    \n\n    if (city) {\n      const api_url = await\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n\n      var sunset = data.sys.sunset;\n      var date = new Date();\n      date.setTime(sunset);\n      var sunset_date = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n      this.setState({\n        temp: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        pressure: data.main.pressure,\n        sunset: sunset_date,\n        error: undefined\n      });\n    } else {\n      this.setState({\n        temp: undefined,\n        city: undefined,\n        country: undefined,\n        pressure: undefined,\n        sunset: undefined,\n        error: \"Введите название города\"\n      });\n    }\n    \n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-5 info\">\n                <Info />\n              </div>\n              <div className=\"col-sm-7 form\">\n                <Form weatherMethod={this.getWeather} />\n                <Weather\n                  temp={this.state.temp}\n                  city={this.state.city}\n                  country={this.state.country}\n                  pressure={this.state.pressure}\n                  sunset={this.state.sunset}\n                  error={this.state.error}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}