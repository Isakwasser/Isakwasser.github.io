{"version":3,"sources":["webpack:///./src/assets/audio/app07/sound_sm.wav","webpack:///./src/components/pages/appDigital/appS07/js/js/showGraph.js","webpack:///./src/components/pages/appDigital/appS07/js/appS07.js","webpack:///./src/components/pages/appDigital/appS07/js/js/fft.js","webpack:///./src/components/pages/appDigital/appS07/appS07.vue?8abb","webpack:///./src/components/pages/appDigital/appS07/appS07.vue"],"names":["module","exports","__webpack_require__","p","require","appS07","data","windowWidth","fs","undefined","methods","step1","_this","this","context","AudioContext","webkitAudioContext","request","XMLHttpRequest","open","$refs","audio","src","responseType","onload","decodeAudioData","response","buffer","float32Array","getChannelData","showSpectrogramByBytes","sampleRate","err","console","log","send","_this2","canvasID","arguments","length","canvas","document","getElementById","style","position","width","height","canvasCtx","getContext","clearRect","fillStyle","fillRect","drawPiece","currentIndex","datafft","signal","ans","amplitude","frequency","Re","Im","N","a","Math","sqrt","fjRe","fjIm","j","sumre","sumim","k","cos","PI","sin","i","push","fft","slice","arr","arrf","currentOpacity","posX","posY","setTimeout","getSpectrogram","_this3","initAudioBuffer","playFloat32Array","myArrayBuffer","audioCtx","window","source","createBufferSource","connect","destination","start","stop","onclick","test","audioEle","Audio","autoplay","preload","audioSourceNode","createMediaElementSource","analyserNode","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","innerWidth","draw","imageData","getImageData","getByteFrequencyData","putImageData","barOpacity","requestAnimationFrame","filter","createBiquadFilter","value","gain","type","setValueAtTime","currentTime","linearRampToValueAtTime","step2","_this4","audio2","filterButterworth","inputSignal","sum","b","m","mounted","appS07_appS07","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_m","ref","attrs","controls","on","click","_s","staticRenderFns","id","Component","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/7.1fcb050fca945280a6c6.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound_sm.e069115.wav\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/audio/app07/sound_sm.wav\n// module id = k5iw\n// module chunks = 7","let Highcharts = require('highcharts');\r\n\r\nexport default function showGraph(id, x, y) {\r\n    Highcharts.chart(id, {\r\n        // chart: {\r\n        //     zoomType: 'x'\r\n        // },\r\n        title: {\r\n            text: undefined,\r\n        },\r\n        xAxis: {\r\n            // type: 'numeric',\r\n            categories: x,\r\n            // tickAmount: 5,\r\n            // softMax: 3,\r\n            min: 0,\r\n            // startOnTick: false,\r\n        },\r\n        series: [{\r\n            data: y,\r\n            lineWidth: 0.5,\r\n            name: undefined,\r\n            // type: 'line',\r\n            \r\n        }]\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/pages/appDigital/appS07/js/js/showGraph.js","import fft from \"./js/fft\";\r\nimport gercel from './js/gercel';\r\nimport showGraph from \"./js/showGraph\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            windowWidth: 0.01,\r\n            fs: undefined,\r\n        }\r\n    },\r\n    methods: {\r\n        step1() {\r\n            // create the audio context (chrome only for now)\r\n            let context = new (AudioContext || webkitAudioContext)();\r\n\r\n            let request = new XMLHttpRequest();\r\n            request.open('GET', this.$refs.audio.src, true);\r\n            request.responseType = 'arraybuffer';\r\n    \r\n            // When loaded decode the data\r\n            request.onload = ()=> {\r\n                // decode the data\r\n                context.decodeAudioData(request.response, (buffer) => {\r\n                    let float32Array = buffer.getChannelData(0); // получили массив байтов\r\n                    this.showSpectrogramByBytes(float32Array, buffer.sampleRate);\r\n                }, (err)=>{console.log(`Decode error: ${err}`)});\r\n            }\r\n            request.send();\r\n        },\r\n        showSpectrogramByBytes(float32Array, fs, canvasID = 'spectrogram') {\r\n            console.log(fs)\r\n            let currentIndex = 0;\r\n            const canvas = document.getElementById(canvasID); // прикрепили окно рисования\r\n            canvas.style.position = 'relative';\r\n            canvas.width = float32Array.length/fs/this.windowWidth*2;\r\n            canvas.height = fs * this.windowWidth;\r\n            const canvasCtx = canvas.getContext('2d');\r\n            canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\r\n            canvasCtx.fillStyle = 'rgb(0, 0, 0)';\r\n            canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\r\n            // let min = 100, max = 0;\r\n\r\n            let drawPiece = (currentIndex) => {\r\n                // console.log(currentIndex)\r\n                let datafft = fft(float32Array.slice(currentIndex * fs * this.windowWidth, (currentIndex + 1) * fs * this.windowWidth), fs)\r\n                let arr = [];\r\n                let arrf = [];\r\n                for (let i = 0; i < datafft.amplitude.length / 2; i++) {\r\n                    let currentOpacity = (Math.log(datafft.amplitude[i])+10)/20;\r\n                    // min = min > currentOpacity ? currentOpacity : min;\r\n                    // max = max < currentOpacity ? currentOpacity : max;\r\n                    // console.log(min,max)\r\n                    arr.push(currentOpacity);\r\n                    arrf.push(datafft.frequency[i]);\r\n                }\r\n                // console.log(Math.min(...arr), Math.max(...arr));\r\n\r\n                //Draw spectrum\r\n                let posX = currentIndex*2;\r\n                let posY = canvas.height;\r\n                for (let i = 0; i < arrf.length; i++) {\r\n                    canvasCtx.fillStyle = 'rgba(255, 255, 255,'+arr[i]+')';\r\n                    canvasCtx.fillRect(posX, posY, 3, 2);\r\n                    posY -= 2;\r\n                }\r\n                if ((currentIndex + 1) * fs * this.windowWidth < float32Array.length) {\r\n                    setTimeout(drawPiece, 0, currentIndex + 1)\r\n                }\r\n                \r\n            }\r\n\r\n            drawPiece(currentIndex);\r\n        },\r\n        getSpectrogram() {\r\n            // create the audio context (chrome only for now)\r\n            let context = new (AudioContext || webkitAudioContext)();\r\n\r\n            let request = new XMLHttpRequest();\r\n            request.open('GET', this.$refs.audio.src, true);\r\n            request.responseType = 'arraybuffer';\r\n    \r\n            // When loaded decode the data\r\n            request.onload = ()=> {\r\n                // decode the data\r\n                context.decodeAudioData(request.response, (buffer) => {\r\n                    this.initAudioBuffer = buffer;\r\n                    let float32Array = buffer.getChannelData(0);\r\n                    console.log('float32Array', float32Array)\r\n\r\n                    // this.playFloat32Array(buffer);\r\n\r\n                }, (err)=>{console.log(`Decode error: ${err}`)});\r\n            }\r\n            request.send();\r\n        },\r\n        playFloat32Array(myArrayBuffer) {\r\n            let audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\n            // just random values between -1.0 and 1.0\r\n            // This gives us the actual array that contains the data\r\n            let nowBuffering = myArrayBuffer.getChannelData(0);\r\n            for (var i = 0; i < myArrayBuffer.length; i++) {\r\n                // Math.random() is in [0; 1.0]\r\n                // audio needs to be in [-1.0; 1.0]\r\n                // nowBuffering[i] = Math.random()*2-1;\r\n            }\r\n                \r\n            \r\n\r\n            // Get an AudioBufferSourceNode.\r\n            // This is the AudioNode to use when we want to play an AudioBuffer\r\n            let source = audioCtx.createBufferSource();\r\n\r\n            // set the buffer in the AudioBufferSourceNode\r\n            source.buffer = myArrayBuffer;\r\n\r\n            // connect the AudioBufferSourceNode to the\r\n            // destination so we can hear the sound\r\n            source.connect(audioCtx.destination);\r\n\r\n            // start the source playing\r\n            source.start();\r\n            this.$refs.stop.onclick = () => {\r\n                source.stop();\r\n            }\r\n\r\n        },\r\n        test() {\r\n            const audioCtx = new AudioContext();\r\n\r\n            //Create audio source\r\n            //Here, we use an audio file, but this could also be e.g. microphone input\r\n            const audioEle = new Audio();\r\n            audioEle.src = '/static/media/sound.wav';//insert file name here\r\n            audioEle.autoplay = true;\r\n            audioEle.preload = 'auto';\r\n            const audioSourceNode = audioCtx.createMediaElementSource(audioEle);\r\n\r\n            //Create analyser node\r\n            const analyserNode = audioCtx.createAnalyser();\r\n            analyserNode.fftSize = 8192;\r\n            const bufferLength = analyserNode.frequencyBinCount;\r\n            // const dataArray = new Float32Array(bufferLength);\r\n            const dataArray = new Uint8Array(bufferLength);\r\n\r\n            //Set up audio node network\r\n            audioSourceNode.connect(analyserNode);\r\n            analyserNode.connect(audioCtx.destination);\r\n\r\n            //Create 2D canvas\r\n            const canvas = document.getElementById('spectrogram');\r\n            // canvas.style.position = 'absolute';\r\n            canvas.style.position = 'relative';\r\n            // canvas.style.top = 0;\r\n            // canvas.style.left = 0;\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = bufferLength;\r\n            // document.body.appendChild(canvas);\r\n            const canvasCtx = canvas.getContext('2d');\r\n            canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\r\n            // let max = -10000,min=10000;\r\n            canvasCtx.fillStyle = 'rgb(0, 0, 0)';\r\n            canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\r\n            function draw() {\r\n                let imageData = canvasCtx.getImageData(\r\n                    0,\r\n                    0,\r\n                    canvas.width,\r\n                    canvas.height,\r\n                );\r\n\r\n                //Get spectrum data\r\n                analyserNode.getByteFrequencyData(dataArray);\r\n\r\n                //Draw black background\r\n                canvasCtx.fillStyle = 'rgb(0, 0, 0)';\r\n                canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\r\n                canvasCtx.putImageData(imageData, 2, 0);\r\n\r\n                //Draw spectrum\r\n                // const barHeight = (canvas.height / bufferLength) * 2.5;\r\n                let posY = canvas.height;\r\n                for (let i = 0; i < bufferLength; i++) {\r\n                    // const barOpacity = (dataArray[i]) * 2;\r\n                    // max = dataArray[i] > max ? dataArray[i] : max;\r\n                    // min = dataArray[i]+140 < min ? dataArray[i]+140 : min;\r\n                    // console.log(min,max)\r\n                    const barOpacity = dataArray[i]/255;\r\n                    canvasCtx.fillStyle = 'rgba(255, 255, 255,'+barOpacity+')';\r\n                    // canvasCtx.fillRect(posY, canvas.height - barHeight / 2, barWidth, barHeight / 2);\r\n                    canvasCtx.fillRect(0, posY, 4, 1);\r\n                    posY -= 1;\r\n                }\r\n                //Schedule next redraw\r\n                requestAnimationFrame(draw);\r\n            };\r\n\r\n            draw();\r\n        },\r\n        filter() {\r\n            let context = new (AudioContext || webkitAudioContext)();\r\n            let source = context.createMediaElementSource(this.$refs.audio);\r\n            let filter = context.createBiquadFilter();\r\n\r\n            source.connect(filter);\r\n            filter.connect(context.destination);\r\n\r\n            filter.frequency.value = 10000;\r\n            filter.gain.value = 30;\r\n            // \"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"peaking\", \"notch\", \"allpass\"\r\n            filter.type = \"highpass\";\r\n\r\n            filter.frequency.setValueAtTime(0.0, context.currentTime);\r\n            filter.frequency.linearRampToValueAtTime(120.0, context.currentTime + 10);\r\n            \r\n            console.log('filter end')\r\n        },\r\n        step2() {\r\n            // create the audio context (chrome only for now)\r\n            let context = new (AudioContext || webkitAudioContext)();\r\n\r\n            let request = new XMLHttpRequest();\r\n            request.open('GET', this.$refs.audio2.src, true);\r\n            request.responseType = 'arraybuffer';\r\n    \r\n            // When loaded decode the data\r\n            request.onload = ()=> {\r\n                // decode the data\r\n                context.decodeAudioData(request.response, (buffer) => {\r\n                    let float32Array = buffer.getChannelData(0); // получили массив байтов\r\n                    this.filterButterworth(float32Array);\r\n                    this.showSpectrogramByBytes(float32Array, buffer.sampleRate,'spectrogram2');\r\n                    this.playFloat32Array(buffer);\r\n                }, (err)=>{console.log(`Decode error: ${err}`)});\r\n            }\r\n            request.send();\r\n        },\r\n        filterButterworth(float32Array) {\r\n            let power = 3;\r\n            let inputSignal = float32Array.slice(0);\r\n            let sum;\r\n            let a = [1, 3, 3, 1];\r\n            let b = [960001, -1343997, 576003, -191999];\r\n            for (let k = 0; k < float32Array.length; k++) {\r\n                sum = 0;\r\n                for (let m = 0; m <= power; m++) {\r\n                    if (k - m >= 0) {\r\n                        sum += b[m] * inputSignal[k - m];\r\n                    }\r\n                }\r\n                for (let m = 1; m <= power; m++) {\r\n                    if (k - m >= 0) {\r\n                        sum -= a[m] * float32Array[k - m];\r\n                    }\r\n                }\r\n                \r\n\r\n\r\n                float32Array[k] = sum/960001;\r\n                // float32Array[k] = 32;\r\n            }\r\n            console.log(float32Array);\r\n            return float32Array;\r\n        }\r\n    },\r\n    mounted() {\r\n        // this.doWaveform();\r\n        // this.step1();\r\n        // this.step2();\r\n\r\n    },\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/pages/appDigital/appS07/js/appS07.js","export default function fft(signal, fs) {\r\n    /*\r\n    * Извлечение спектра из сигнала\r\n    */\r\n    // let tic = (new Date()).getTime();\r\n    let ans = {\r\n        amplitude: [],\r\n        frequency: [],\r\n        Re: [],\r\n        Im: [],\r\n    };\r\n    let N = signal.length;\r\n    let a = 1/Math.sqrt(N);\r\n    let fjRe = [],\r\n        fjIm = [];\r\n    for(let j=0; j<N; j++)\r\n    {\r\n        // console.log(j);\r\n        let sumre = 0,sumim = 0;\r\n        for(let k=0;k<N;k++)\r\n        {\r\n            sumre += signal[k]*Math.cos(2*Math.PI/N*k*j);  \r\n            sumim += signal[k]*Math.sin(2*Math.PI/N*k*j);\r\n        }\r\n        fjRe[j] = a*sumre;\r\n        fjIm[j] = -a*sumim;\r\n    }\r\n    ans.Re = fjRe;\r\n    ans.Im = fjIm;\r\n    for (let i = 0; i < ans.Im.length; i++) {\r\n        ans.amplitude.push(Math.sqrt(ans.Re[i] * ans.Re[i] + ans.Im[i] * ans.Im[i]));\r\n        ans.frequency.push(i*fs/ans.Im.length);\r\n    }\r\n    // let toc = (new Date()).getTime();\r\n    // console.log(`Алгоритм Фурье занял ${toc - tic}мс`);\r\n    return ans;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/pages/appDigital/appS07/js/js/fft.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"appDigitalInit\"},[_c('div',{staticClass:\"appDigital_S07\"},[_c('h2',{staticClass:\"text-center\"},[_vm._v(\"Самостоятельная работа №7\")]),_vm._v(\" \"),_c('div',{staticClass:\"step\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"step__content\"},[_c('div',{staticClass:\"step__descryption\"},[_vm._v(\"Аудиофайл\")]),_vm._v(\" \"),_c('div',{staticClass:\"step__action\"},[_c('audio',{ref:\"audio\",attrs:{\"controls\":\"\",\"src\":require('@/assets/audio/app07/sound_sm.wav')}},[_vm._v(\"\\n            Тег audio не поддерживается вашим браузером.\\n          \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"step\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"step__content\"},[_c('div',{staticClass:\"step__descryption\"},[_c('button',{on:{\"click\":_vm.step1}},[_vm._v(\"\\n            Получить спектрограмму c временным разрешением \"+_vm._s(_vm.windowWidth)+\"с\\n          \")])]),_vm._v(\" \"),_vm._m(2)])]),_vm._v(\" \"),_c('div',{staticClass:\"step\"},[_vm._m(3),_vm._v(\" \"),_c('div',{staticClass:\"step__content\"},[_c('div',{staticClass:\"step__descryption\"},[_vm._v(\"Аудиофайл\")]),_vm._v(\" \"),_c('div',{staticClass:\"step__action\"},[_c('audio',{ref:\"audio2\",attrs:{\"controls\":\"\",\"src\":require('@/assets/audio/app07/sound_sm.wav')}},[_vm._v(\"\\n            Тег audio не поддерживается вашим браузером.\\n          \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"step\"},[_vm._m(4),_vm._v(\" \"),_c('div',{staticClass:\"step__content\"},[_c('div',{staticClass:\"step__descryption\"},[_c('button',{on:{\"click\":_vm.step2}},[_vm._v(\"\\n            Фильтр, спектрограмма, воспроизведение\\n          \")]),_vm._v(\" \"),_c('button',{ref:\"stop\"},[_vm._v(\"Остановить воспроизведение\")])]),_vm._v(\" \"),_vm._m(5)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"step__num\"},[_c('div',{staticClass:\"num\"},[_vm._v(\"1\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"step__num\"},[_c('div',{staticClass:\"num\"},[_vm._v(\"2\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"step__action\"},[_c('canvas',{attrs:{\"id\":\"spectrogram\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"step__num\"},[_c('div',{staticClass:\"num\"},[_vm._v(\"3\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"step__num\"},[_c('div',{staticClass:\"num\"},[_vm._v(\"4\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"step__action\"},[_c('canvas',{attrs:{\"id\":\"spectrogram2\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-44ff753a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/pages/appDigital/appS07/appS07.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-44ff753a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./appS07.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!./js/appS07.js\"\nimport __vue_script__ from \"!!babel-loader!./js/appS07.js\"/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-44ff753a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./appS07.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pages/appDigital/appS07/appS07.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}